variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dstyle.color=always -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Djansi.force=true"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"

cache:
  paths:
    - .m2
    - .sonar/cache

stages:
  - test
  - build
  - deploy

.ignore:
  except:
    changes:
      - ".gitlab-ci.yml"
      - ".gitignore"
      - "docker-compose.yml"
      - "*.md"
      - "doc/*"
      - "*.css"
      - "*.html"

Test-code:
  stage: test
  image: maven:3.8.4-openjdk-11-slim
  extends: .ignore
  script:
    - mvn ${MVN_OPTS} verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JeromeCheviet_poseidon -Dsonar.organization=jeromecheviet -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.home=${SONAR_USER_HOME}
    - awk -F"," '{ lines += $8 + $9; covered += $9 } END { print covered, "/", lines, "lines covered"; print 100*covered/lines, "% covered" }' target/site/jacoco/jacoco.csv || echo "0.0 % covered"
  coverage: '/\d+.*\d+ \% covered/'
  tags:
    - docker

Build-JAR:
  stage: build
  image: maven:3.8.4-openjdk-11-slim
  dependencies :
    - Test-code
  extends: .ignore
  script:
    - mvn ${MVN_OPTS} -Drevision=x.y.z-SUFFIX -Dskiptests -B clean install
  artifacts:
    paths:
      - target/*.jar
    expire_in: 7 days
  only:
    - dev
    - main
    - merge_requests
  tags:
    - docker

Prepare-server:
  stage: deploy
  when: manual
  extends: .ignore
  script:
    - echo "Préparer le serveur cible (BDD, Java)"
  only:
    - main
  tags:
    - docker
    
Deploy-app:
  stage: deploy
  when: manual
  extends: .ignore
  dependencies:
    - Build-JAR
    - Prepare-server
  script:
    - echo "Lancer les playbooks Ansible pour déployer l'application"
    - echo "Voir si il n'est pas plus pertinent de créer un projet dédié Ansible et transformer ce job en Trigger !"
  only:
    - main
  tags:
    - docker